<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>To-Do App</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }
    h1 {
      color: #333;
    }
    .task-form {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }
    input, button {
      padding: 10px;
      font-size: 16px;
    }
    ul {
      list-style: none;
      padding: 0;
      width: 100%;
      max-width: 600px;
    }
    li {
      background: #fff;
      padding: 15px;
      margin-bottom: 10px;
      border: 1px solid #ddd;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }
    .completed {
      text-decoration: line-through;
      color: gray;
    }
    .task-actions button {
      margin-left: 5px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>To-Do List</h1>
  <div class="task-form">
    <input type="text" id="taskInput" placeholder="Task name" />
    <input type="date" id="dateInput" />
    <input type="time" id="timeInput" />
    <button onclick="addTask()">Add Task</button>
  </div>
  <ul id="taskList"></ul>

  <script>
    let tasks = [];

    function renderTasks() {
      const taskList = document.getElementById("taskList");
      taskList.innerHTML = "";

      tasks.forEach((task, index) => {
        const li = document.createElement("li");

        const taskText = document.createElement("span");
        taskText.innerHTML = `${task.name} <small>(${task.date} ${task.time})</small>`;
        taskText.className = task.completed ? "completed" : "";

        const actions = document.createElement("div");
        actions.className = "task-actions";

        const completeBtn = document.createElement("button");
        completeBtn.innerText = task.completed ? "Undo" : "Complete";
        completeBtn.onclick = () => toggleComplete(index);

        const editBtn = document.createElement("button");
        editBtn.innerText = "Edit";
        editBtn.onclick = () => editTask(index);

        const deleteBtn = document.createElement("button");
        deleteBtn.innerText = "Delete";
        deleteBtn.onclick = () => deleteTask(index);

        actions.appendChild(completeBtn);
        actions.appendChild(editBtn);
        actions.appendChild(deleteBtn);

        li.appendChild(taskText);
        li.appendChild(actions);

        taskList.appendChild(li);
      });
    }

    function addTask() {
      const name = document.getElementById("taskInput").value.trim();
      const date = document.getElementById("dateInput").value;
      const time = document.getElementById("timeInput").value;
      if (!name) return alert("Please enter a task name");

      tasks.push({ name, date, time, completed: false });
      renderTasks();
      clearInputs();
    }

    function clearInputs() {
      document.getElementById("taskInput").value = "";
      document.getElementById("dateInput").value = "";
      document.getElementById("timeInput").value = "";
    }

    function toggleComplete(index) {
      tasks[index].completed = !tasks[index].completed;
      renderTasks();
    }

    function deleteTask(index) {
      if (confirm("Are you sure you want to delete this task?")) {
        tasks.splice(index, 1);
        renderTasks();
      }
    }

    function editTask(index) {
      const newName = prompt("Edit task name:", tasks[index].name);
      const newDate = prompt("Edit date:", tasks[index].date);
      const newTime = prompt("Edit time:", tasks[index].time);

      if (newName !== null && newDate !== null && newTime !== null) {
        tasks[index].name = newName.trim() || tasks[index].name;
        tasks[index].date = newDate;
        tasks[index].time = newTime;
        renderTasks();
      }
    }
  </script>
</body>
</html>
